{"ast":null,"code":"var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n  constructor(params = {}) {\n    Object.assign(this, params);\n  }\n  toString() {\n    return this.ia5String || this.visibleString || this.bmpString || this.utf8String || \"\";\n  }\n};\n__decorate([AsnProp({\n  type: AsnPropTypes.IA5String\n})], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.VisibleString\n})], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.BmpString\n})], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.Utf8String\n})], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([AsnType({\n  type: AsnTypeTypes.Choice\n})], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n  constructor(params = {}) {\n    this.organization = new DisplayText();\n    this.noticeNumbers = [];\n    Object.assign(this, params);\n  }\n}\n__decorate([AsnProp({\n  type: DisplayText\n})], NoticeReference.prototype, \"organization\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.Integer,\n  repeated: \"sequence\"\n})], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n  constructor(params = {}) {\n    Object.assign(this, params);\n  }\n}\n__decorate([AsnProp({\n  type: NoticeReference,\n  optional: true\n})], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([AsnProp({\n  type: DisplayText,\n  optional: true\n})], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n  constructor(params = {}) {\n    Object.assign(this, params);\n  }\n};\n__decorate([AsnProp({\n  type: AsnPropTypes.IA5String\n})], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([AsnProp({\n  type: UserNotice\n})], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([AsnType({\n  type: AsnTypeTypes.Choice\n})], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n  constructor(params = {}) {\n    this.policyQualifierId = \"\";\n    this.qualifier = new ArrayBuffer(0);\n    Object.assign(this, params);\n  }\n}\n__decorate([AsnProp({\n  type: AsnPropTypes.ObjectIdentifier\n})], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.Any\n})], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n  constructor(params = {}) {\n    this.policyIdentifier = \"\";\n    Object.assign(this, params);\n  }\n}\n__decorate([AsnProp({\n  type: AsnPropTypes.ObjectIdentifier\n})], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([AsnProp({\n  type: PolicyQualifierInfo,\n  repeated: \"sequence\",\n  optional: true\n})], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n  constructor(items) {\n    super(items);\n    Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n  }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([AsnType({\n  type: AsnTypeTypes.Sequence,\n  itemType: PolicyInformation\n})], CertificatePolicies);\nexport { CertificatePolicies };","map":{"version":3,"names":["CertificatePolicies_1","__decorate","AsnProp","AsnPropTypes","AsnType","AsnTypeTypes","AsnArray","id_ce","id_ce_certificatePolicies","id_ce_certificatePolicies_anyPolicy","DisplayText","constructor","params","Object","assign","toString","ia5String","visibleString","bmpString","utf8String","type","IA5String","prototype","VisibleString","BmpString","Utf8String","Choice","NoticeReference","organization","noticeNumbers","Integer","repeated","UserNotice","optional","Qualifier","PolicyQualifierInfo","policyQualifierId","qualifier","ArrayBuffer","ObjectIdentifier","Any","PolicyInformation","policyIdentifier","CertificatePolicies","items","setPrototypeOf","Sequence","itemType"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_policies.js"],"sourcesContent":["var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || this.visibleString || this.bmpString || this.utf8String || \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.VisibleString })\n], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n    constructor(params = {}) {\n        this.organization = new DisplayText();\n        this.noticeNumbers = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DisplayText })\n], NoticeReference.prototype, \"organization\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, repeated: \"sequence\" })\n], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: NoticeReference, optional: true })\n], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([\n    AsnProp({ type: DisplayText, optional: true })\n], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([\n    AsnProp({ type: UserNotice })\n], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n    constructor(params = {}) {\n        this.policyQualifierId = \"\";\n        this.qualifier = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n    constructor(params = {}) {\n        this.policyIdentifier = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: PolicyQualifierInfo, repeated: \"sequence\", optional: true })\n], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n    }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyInformation })\n], CertificatePolicies);\nexport { CertificatePolicies };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}