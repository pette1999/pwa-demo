{"ast":null,"code":"/**\n * Convert the aaguid buffer in authData into a UUID string\n */\nexport function aaguidToString(aaguid) {\n  // Raw Hex: adce000235bcc60a648b0b25f1f05503\n  const hex = aaguid.toString('hex');\n  const segments = [hex.slice(0, 8),\n  // 8\n  hex.slice(8, 12),\n  // 4\n  hex.slice(12, 16),\n  // 4\n  hex.slice(16, 20),\n  // 4\n  hex.slice(20, 32) // 8\n  ];\n\n  // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n  return segments.join('-');\n}","map":{"version":3,"names":["aaguidToString","aaguid","hex","toString","segments","slice","join"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/src/utils/passkey/shared/aaguidToString.ts"],"sourcesContent":["/**\n * Convert the aaguid buffer in authData into a UUID string\n */\nexport function aaguidToString(aaguid: Buffer): string {\n  // Raw Hex: adce000235bcc60a648b0b25f1f05503\n  const hex = aaguid.toString('hex');\n\n  const segments: string[] = [\n    hex.slice(0, 8), // 8\n    hex.slice(8, 12), // 4\n    hex.slice(12, 16), // 4\n    hex.slice(16, 20), // 4\n    hex.slice(20, 32), // 8\n  ];\n\n  // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n  return segments.join('-');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,cAAcA,CAACC,MAAc,EAAU;EACrD;EACA,MAAMC,GAAG,GAAGD,MAAM,CAACE,QAAQ,CAAC,KAAK,CAAC;EAElC,MAAMC,QAAkB,GAAG,CACzBF,GAAG,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAAE;EACjBH,GAAG,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAAE;EAClBH,GAAG,CAACG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;EAAE;EACnBH,GAAG,CAACG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;EAAE;EACnBH,GAAG,CAACG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE;EAAA,CACpB;;EAED;EACA,OAAOD,QAAQ,CAACE,IAAI,CAAC,GAAG,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}