{"ast":null,"code":"import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n  fromASN: value => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n  toASN: value => {\n    if (value === null) {\n      return new asn1js.Null();\n    }\n    const schema = asn1js.fromBER(value);\n    if (schema.result.error) {\n      throw new Error(schema.result.error);\n    }\n    return schema.result;\n  }\n};\nexport const AsnIntegerConverter = {\n  fromASN: value => value.valueBlock.valueHexView.byteLength >= 4 ? value.valueBlock.toString() : value.valueBlock.valueDec,\n  toASN: value => new asn1js.Integer({\n    value: +value\n  })\n};\nexport const AsnEnumeratedConverter = {\n  fromASN: value => value.valueBlock.valueDec,\n  toASN: value => new asn1js.Enumerated({\n    value\n  })\n};\nexport const AsnIntegerArrayBufferConverter = {\n  fromASN: value => value.valueBlock.valueHexView,\n  toASN: value => new asn1js.Integer({\n    valueHex: value\n  })\n};\nexport const AsnIntegerBigIntConverter = {\n  fromASN: value => value.toBigInt(),\n  toASN: value => asn1js.Integer.fromBigInt(value)\n};\nexport const AsnBitStringConverter = {\n  fromASN: value => value.valueBlock.valueHexView,\n  toASN: value => new asn1js.BitString({\n    valueHex: value\n  })\n};\nexport const AsnObjectIdentifierConverter = {\n  fromASN: value => value.valueBlock.toString(),\n  toASN: value => new asn1js.ObjectIdentifier({\n    value\n  })\n};\nexport const AsnBooleanConverter = {\n  fromASN: value => value.valueBlock.value,\n  toASN: value => new asn1js.Boolean({\n    value\n  })\n};\nexport const AsnOctetStringConverter = {\n  fromASN: value => value.valueBlock.valueHexView,\n  toASN: value => new asn1js.OctetString({\n    valueHex: value\n  })\n};\nexport const AsnConstructedOctetStringConverter = {\n  fromASN: value => new OctetString(value.getValue()),\n  toASN: value => value.toASN()\n};\nfunction createStringConverter(Asn1Type) {\n  return {\n    fromASN: value => value.valueBlock.value,\n    toASN: value => new Asn1Type({\n      value\n    })\n  };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n  fromASN: value => value.toDate(),\n  toASN: value => new asn1js.UTCTime({\n    valueDate: value\n  })\n};\nexport const AsnGeneralizedTimeConverter = {\n  fromASN: value => value.toDate(),\n  toASN: value => new asn1js.GeneralizedTime({\n    valueDate: value\n  })\n};\nexport const AsnNullConverter = {\n  fromASN: () => null,\n  toASN: () => {\n    return new asn1js.Null();\n  }\n};\nexport function defaultConverter(type) {\n  switch (type) {\n    case AsnPropTypes.Any:\n      return AsnAnyConverter;\n    case AsnPropTypes.BitString:\n      return AsnBitStringConverter;\n    case AsnPropTypes.BmpString:\n      return AsnBmpStringConverter;\n    case AsnPropTypes.Boolean:\n      return AsnBooleanConverter;\n    case AsnPropTypes.CharacterString:\n      return AsnCharacterStringConverter;\n    case AsnPropTypes.Enumerated:\n      return AsnEnumeratedConverter;\n    case AsnPropTypes.GeneralString:\n      return AsnGeneralStringConverter;\n    case AsnPropTypes.GeneralizedTime:\n      return AsnGeneralizedTimeConverter;\n    case AsnPropTypes.GraphicString:\n      return AsnGraphicStringConverter;\n    case AsnPropTypes.IA5String:\n      return AsnIA5StringConverter;\n    case AsnPropTypes.Integer:\n      return AsnIntegerConverter;\n    case AsnPropTypes.Null:\n      return AsnNullConverter;\n    case AsnPropTypes.NumericString:\n      return AsnNumericStringConverter;\n    case AsnPropTypes.ObjectIdentifier:\n      return AsnObjectIdentifierConverter;\n    case AsnPropTypes.OctetString:\n      return AsnOctetStringConverter;\n    case AsnPropTypes.PrintableString:\n      return AsnPrintableStringConverter;\n    case AsnPropTypes.TeletexString:\n      return AsnTeletexStringConverter;\n    case AsnPropTypes.UTCTime:\n      return AsnUTCTimeConverter;\n    case AsnPropTypes.UniversalString:\n      return AsnUniversalStringConverter;\n    case AsnPropTypes.Utf8String:\n      return AsnUtf8StringConverter;\n    case AsnPropTypes.VideotexString:\n      return AsnVideotexStringConverter;\n    case AsnPropTypes.VisibleString:\n      return AsnVisibleStringConverter;\n    default:\n      return null;\n  }\n}","map":{"version":3,"names":["asn1js","AsnPropTypes","OctetString","AsnAnyConverter","fromASN","value","Null","valueBeforeDecodeView","toASN","schema","fromBER","result","error","Error","AsnIntegerConverter","valueBlock","valueHexView","byteLength","toString","valueDec","Integer","AsnEnumeratedConverter","Enumerated","AsnIntegerArrayBufferConverter","valueHex","AsnIntegerBigIntConverter","toBigInt","fromBigInt","AsnBitStringConverter","BitString","AsnObjectIdentifierConverter","ObjectIdentifier","AsnBooleanConverter","Boolean","AsnOctetStringConverter","AsnConstructedOctetStringConverter","getValue","createStringConverter","Asn1Type","AsnUtf8StringConverter","Utf8String","AsnBmpStringConverter","BmpString","AsnUniversalStringConverter","UniversalString","AsnNumericStringConverter","NumericString","AsnPrintableStringConverter","PrintableString","AsnTeletexStringConverter","TeletexString","AsnVideotexStringConverter","VideotexString","AsnIA5StringConverter","IA5String","AsnGraphicStringConverter","GraphicString","AsnVisibleStringConverter","VisibleString","AsnGeneralStringConverter","GeneralString","AsnCharacterStringConverter","CharacterString","AsnUTCTimeConverter","toDate","UTCTime","valueDate","AsnGeneralizedTimeConverter","GeneralizedTime","AsnNullConverter","defaultConverter","type","Any"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/node_modules/@peculiar/asn1-schema/build/es2015/converters.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1js.Null();\n        }\n        const schema = asn1js.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Integer({ value: +value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.Integer({ valueHex: value }),\n};\nexport const AsnIntegerBigIntConverter = {\n    fromASN: (value) => value.toBigInt(),\n    toASN: (value) => asn1js.Integer.fromBigInt(value),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1js.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1js.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.OctetString({ valueHex: value }),\n};\nexport const AsnConstructedOctetStringConverter = {\n    fromASN: (value) => new OctetString(value.getValue()),\n    toASN: (value) => value.toASN(),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: () => null,\n    toASN: () => {\n        return new asn1js.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}