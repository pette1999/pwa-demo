{"ast":null,"code":"const verifyUserId = (credential, userId) => {\n  console.log(\"⚈ ⚈ ⚈ Verifying UserId ⚈ ⚈ ⚈\");\n  const utf8Decoder = new TextDecoder(\"utf-8\");\n  const decodedUserHandle = utf8Decoder.decode( // @ts-ignore\n  credential.response.userHandle);\n  console.log(\"✅ decodedUserHandle : \", decodedUserHandle);\n\n  if (decodedUserHandle !== userId) {\n    console.log(\"❌ The userId does not match. Failed Login.\");\n    return false;\n  } else {\n    console.log(\"✅  Verified UserId\"); // @ts-ignore\n\n    return true;\n  }\n};\n\nexport default verifyUserId;","map":{"version":3,"names":["verifyUserId","credential","userId","console","log","utf8Decoder","TextDecoder","decodedUserHandle","decode","response","userHandle"],"sources":["/Users/peterchen/Dropbox/Hexlink/react-passkey-proof-of-concept/src/utils/passkey/authenticate/verifyUserId.tsx"],"sourcesContent":["import React from \"react\";\n\nconst verifyUserId = (credential: Credential, userId: string): boolean => {\n  console.log(\"⚈ ⚈ ⚈ Verifying UserId ⚈ ⚈ ⚈\");\n  const utf8Decoder = new TextDecoder(\"utf-8\");\n\n  const decodedUserHandle = utf8Decoder.decode(\n    // @ts-ignore\n    credential.response.userHandle\n  );\n  console.log(\"✅ decodedUserHandle : \", decodedUserHandle);\n\n  if (decodedUserHandle !== userId) {\n    console.log(\"❌ The userId does not match. Failed Login.\");\n    return false;\n  } else {\n    console.log(\"✅  Verified UserId\");\n    // @ts-ignore\n    return true;\n  }\n};\n\nexport default verifyUserId;\n"],"mappings":"AAEA,MAAMA,YAAY,GAAG,CAACC,UAAD,EAAyBC,MAAzB,KAAqD;EACxEC,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACA,MAAMC,WAAW,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,CAApB;EAEA,MAAMC,iBAAiB,GAAGF,WAAW,CAACG,MAAZ,EACxB;EACAP,UAAU,CAACQ,QAAX,CAAoBC,UAFI,CAA1B;EAIAP,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,iBAAtC;;EAEA,IAAIA,iBAAiB,KAAKL,MAA1B,EAAkC;IAChCC,OAAO,CAACC,GAAR,CAAY,4CAAZ;IACA,OAAO,KAAP;EACD,CAHD,MAGO;IACLD,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADK,CAEL;;IACA,OAAO,IAAP;EACD;AACF,CAlBD;;AAoBA,eAAeJ,YAAf"},"metadata":{},"sourceType":"module"}