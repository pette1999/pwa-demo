{"ast":null,"code":"import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n  KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n  KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n  KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n  KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n  KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n  KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n  KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n  KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n  KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n  toJSON() {\n    const flag = this.toNumber();\n    const res = [];\n    if (flag & KeyUsageFlags.cRLSign) {\n      res.push(\"crlSign\");\n    }\n    if (flag & KeyUsageFlags.dataEncipherment) {\n      res.push(\"dataEncipherment\");\n    }\n    if (flag & KeyUsageFlags.decipherOnly) {\n      res.push(\"decipherOnly\");\n    }\n    if (flag & KeyUsageFlags.digitalSignature) {\n      res.push(\"digitalSignature\");\n    }\n    if (flag & KeyUsageFlags.encipherOnly) {\n      res.push(\"encipherOnly\");\n    }\n    if (flag & KeyUsageFlags.keyAgreement) {\n      res.push(\"keyAgreement\");\n    }\n    if (flag & KeyUsageFlags.keyCertSign) {\n      res.push(\"keyCertSign\");\n    }\n    if (flag & KeyUsageFlags.keyEncipherment) {\n      res.push(\"keyEncipherment\");\n    }\n    if (flag & KeyUsageFlags.nonRepudiation) {\n      res.push(\"nonRepudiation\");\n    }\n    return res;\n  }\n  toString() {\n    return `[${this.toJSON().join(\", \")}]`;\n  }\n}","map":{"version":3,"names":["BitString","id_ce","id_ce_keyUsage","KeyUsageFlags","KeyUsage","toJSON","flag","toNumber","res","cRLSign","push","dataEncipherment","decipherOnly","digitalSignature","encipherOnly","keyAgreement","keyCertSign","keyEncipherment","nonRepudiation","toString","join"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/node_modules/@peculiar/asn1-x509/build/es2015/extensions/key_usage.js"],"sourcesContent":["import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n    toJSON() {\n        const flag = this.toNumber();\n        const res = [];\n        if (flag & KeyUsageFlags.cRLSign) {\n            res.push(\"crlSign\");\n        }\n        if (flag & KeyUsageFlags.dataEncipherment) {\n            res.push(\"dataEncipherment\");\n        }\n        if (flag & KeyUsageFlags.decipherOnly) {\n            res.push(\"decipherOnly\");\n        }\n        if (flag & KeyUsageFlags.digitalSignature) {\n            res.push(\"digitalSignature\");\n        }\n        if (flag & KeyUsageFlags.encipherOnly) {\n            res.push(\"encipherOnly\");\n        }\n        if (flag & KeyUsageFlags.keyAgreement) {\n            res.push(\"keyAgreement\");\n        }\n        if (flag & KeyUsageFlags.keyCertSign) {\n            res.push(\"keyCertSign\");\n        }\n        if (flag & KeyUsageFlags.keyEncipherment) {\n            res.push(\"keyEncipherment\");\n        }\n        if (flag & KeyUsageFlags.nonRepudiation) {\n            res.push(\"nonRepudiation\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,OAAO,MAAMC,cAAc,GAAI,GAAED,KAAM,KAAI;AAC3C,OAAO,IAAIE,aAAa;AACxB,CAAC,UAAUA,aAAa,EAAE;EACtBA,aAAa,CAACA,aAAa,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,kBAAkB;EACzEA,aAAa,CAACA,aAAa,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB;EACrEA,aAAa,CAACA,aAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,GAAG,iBAAiB;EACvEA,aAAa,CAACA,aAAa,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,kBAAkB;EACzEA,aAAa,CAACA,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc;EAClEA,aAAa,CAACA,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa;EAChEA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS;EACxDA,aAAa,CAACA,aAAa,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,cAAc;EACnEA,aAAa,CAACA,aAAa,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,cAAc;AACvE,CAAC,EAAEA,aAAa,KAAKA,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,OAAO,MAAMC,QAAQ,SAASJ,SAAS,CAAC;EACpCK,MAAMA,CAAA,EAAG;IACL,MAAMC,IAAI,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC5B,MAAMC,GAAG,GAAG,EAAE;IACd,IAAIF,IAAI,GAAGH,aAAa,CAACM,OAAO,EAAE;MAC9BD,GAAG,CAACE,IAAI,CAAC,SAAS,CAAC;IACvB;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACQ,gBAAgB,EAAE;MACvCH,GAAG,CAACE,IAAI,CAAC,kBAAkB,CAAC;IAChC;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACS,YAAY,EAAE;MACnCJ,GAAG,CAACE,IAAI,CAAC,cAAc,CAAC;IAC5B;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACU,gBAAgB,EAAE;MACvCL,GAAG,CAACE,IAAI,CAAC,kBAAkB,CAAC;IAChC;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACW,YAAY,EAAE;MACnCN,GAAG,CAACE,IAAI,CAAC,cAAc,CAAC;IAC5B;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACY,YAAY,EAAE;MACnCP,GAAG,CAACE,IAAI,CAAC,cAAc,CAAC;IAC5B;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACa,WAAW,EAAE;MAClCR,GAAG,CAACE,IAAI,CAAC,aAAa,CAAC;IAC3B;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACc,eAAe,EAAE;MACtCT,GAAG,CAACE,IAAI,CAAC,iBAAiB,CAAC;IAC/B;IACA,IAAIJ,IAAI,GAAGH,aAAa,CAACe,cAAc,EAAE;MACrCV,GAAG,CAACE,IAAI,CAAC,gBAAgB,CAAC;IAC9B;IACA,OAAOF,GAAG;EACd;EACAW,QAAQA,CAAA,EAAG;IACP,OAAQ,IAAG,IAAI,CAACd,MAAM,CAAC,CAAC,CAACe,IAAI,CAAC,IAAI,CAAE,GAAE;EAC1C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}