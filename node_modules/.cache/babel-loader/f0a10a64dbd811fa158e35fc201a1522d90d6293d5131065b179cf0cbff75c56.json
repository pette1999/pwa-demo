{"ast":null,"code":"import validatePassKey from \"./validatePassKey\";\nimport parseClientData from \"../shared/parseClientData\";\nconst verifyClientData = (credential, loginChallenge) => {\n  //@ts-ignore\n  let clientData = parseClientData(credential.response.clientDataJSON);\n  if (clientData !== null) {\n    console.log(\"✅ We have performed the login.\");\n    console.log(\"✅ clientData : \", clientData);\n    console.log(\"⚈ ⚈ ⚈ Verifying Challenge ⚈ ⚈ ⚈\");\n    return validatePassKey(loginChallenge, clientData.challenge);\n  } else {\n    console.log(\"❌ Failed to perform Login. Client data json is null.\");\n    return false;\n  }\n};\nexport default verifyClientData;","map":{"version":3,"names":["validatePassKey","parseClientData","verifyClientData","credential","loginChallenge","clientData","response","clientDataJSON","console","log","challenge"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/src/utils/passkey/authenticate/verifyClientData.tsx"],"sourcesContent":["import React from \"react\";\nimport UserAccount from \"types/passkey/userAccount\";\nimport validatePassKey from \"./validatePassKey\";\nimport parseClientData from \"../shared/parseClientData\";\n\nconst verifyClientData = (\n  credential: Credential,\n  loginChallenge: string\n): boolean => {\n  //@ts-ignore\n  let clientData = parseClientData(credential.response.clientDataJSON);\n  if (clientData !== null) {\n    console.log(\"✅ We have performed the login.\");\n    console.log(\"✅ clientData : \", clientData);\n    console.log(\"⚈ ⚈ ⚈ Verifying Challenge ⚈ ⚈ ⚈\");\n    return validatePassKey(loginChallenge, clientData.challenge);\n  } else {\n    console.log(\"❌ Failed to perform Login. Client data json is null.\");\n    return false;\n  }\n};\n\nexport default verifyClientData;\n"],"mappings":"AAEA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,2BAA2B;AAEvD,MAAMC,gBAAgB,GAAGA,CACvBC,UAAsB,EACtBC,cAAsB,KACV;EACZ;EACA,IAAIC,UAAU,GAAGJ,eAAe,CAACE,UAAU,CAACG,QAAQ,CAACC,cAAc,CAAC;EACpE,IAAIF,UAAU,KAAK,IAAI,EAAE;IACvBG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,UAAU,CAAC;IAC1CG,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAOT,eAAe,CAACI,cAAc,EAAEC,UAAU,CAACK,SAAS,CAAC;EAC9D,CAAC,MAAM;IACLF,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;IACnE,OAAO,KAAK;EACd;AACF,CAAC;AAED,eAAeP,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}