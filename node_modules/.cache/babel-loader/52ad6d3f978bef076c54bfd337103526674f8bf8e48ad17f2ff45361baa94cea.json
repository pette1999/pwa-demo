{"ast":null,"code":"import parseClientData from \"utils/passkey/shared/parseClientData\";\nconst validatePassKeyCreation = credential => {\n  const clientDataValidation = validateClientData(credential);\n  switch (clientDataValidation.valid) {\n    case true:\n      return clientDataValidation.challenge;\n    case false:\n      return null;\n  }\n};\nconst validateClientData = credential => {\n  // @ts-ignore\n  // Gather the Client Data\n  const clientData = parseClientData(credential.response.clientDataJSON);\n  console.log(\"✅  Gathered Client Data: \", clientData);\n  if (clientData.origin !== process.env.REACT_APP_ORIGIN) {\n    console.log(\"❌  Origin does not match!\");\n    return {\n      valid: false,\n      challenge: null\n    };\n  } else if (clientData.type !== \"webauthn.create\") {\n    console.log(\"❌  Type does not match webauthn.create\");\n    return {\n      valid: false,\n      challenge: null\n    };\n  }\n  console.log(\"✅  Client Data is Valid\");\n  return {\n    valid: true,\n    challenge: clientData.challenge\n  };\n};\nexport default validatePassKeyCreation;","map":{"version":3,"names":["parseClientData","validatePassKeyCreation","credential","clientDataValidation","validateClientData","valid","challenge","clientData","response","clientDataJSON","console","log","origin","process","env","REACT_APP_ORIGIN","type"],"sources":["/Users/peterchen/Dropbox/Hexlink/pwa-demo/src/utils/passkey/register/validatePassKeyCreation.tsx"],"sourcesContent":["import PassKeyClientData from \"types/passkey/passKeyClientData\";\nimport parseClientData from \"utils/passkey/shared/parseClientData\";\nimport PassKeyClientDataValidation from \"types/passkey/passKeyClientDataValidation\";\n\nconst validatePassKeyCreation = (credential: Credential): string | null => {\n  const clientDataValidation = validateClientData(credential);\n  switch (clientDataValidation.valid) {\n    case true:\n      return clientDataValidation.challenge;\n    case false:\n      return null;\n  }\n};\n\nconst validateClientData = (\n  credential: Credential\n): PassKeyClientDataValidation => {\n  // @ts-ignore\n  // Gather the Client Data\n  const clientData = parseClientData(credential.response.clientDataJSON);\n  console.log(\"✅  Gathered Client Data: \", clientData);\n  if (clientData.origin !== process.env.REACT_APP_ORIGIN) {\n    console.log(\"❌  Origin does not match!\");\n    return {\n      valid: false,\n      challenge: null,\n    };\n  } else if (clientData.type !== \"webauthn.create\") {\n    console.log(\"❌  Type does not match webauthn.create\");\n    return {\n      valid: false,\n      challenge: null,\n    };\n  }\n  console.log(\"✅  Client Data is Valid\");\n  return {\n    valid: true,\n    challenge: clientData.challenge,\n  };\n};\n\nexport default validatePassKeyCreation;\n"],"mappings":"AACA,OAAOA,eAAe,MAAM,sCAAsC;AAGlE,MAAMC,uBAAuB,GAAIC,UAAsB,IAAoB;EACzE,MAAMC,oBAAoB,GAAGC,kBAAkB,CAACF,UAAU,CAAC;EAC3D,QAAQC,oBAAoB,CAACE,KAAK;IAChC,KAAK,IAAI;MACP,OAAOF,oBAAoB,CAACG,SAAS;IACvC,KAAK,KAAK;MACR,OAAO,IAAI;EACf;AACF,CAAC;AAED,MAAMF,kBAAkB,GACtBF,UAAsB,IACU;EAChC;EACA;EACA,MAAMK,UAAU,GAAGP,eAAe,CAACE,UAAU,CAACM,QAAQ,CAACC,cAAc,CAAC;EACtEC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,UAAU,CAAC;EACpD,IAAIA,UAAU,CAACK,MAAM,KAAKC,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;IACtDL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,OAAO;MACLN,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE;IACb,CAAC;EACH,CAAC,MAAM,IAAIC,UAAU,CAACS,IAAI,KAAK,iBAAiB,EAAE;IAChDN,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,OAAO;MACLN,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE;IACb,CAAC;EACH;EACAI,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtC,OAAO;IACLN,KAAK,EAAE,IAAI;IACXC,SAAS,EAAEC,UAAU,CAACD;EACxB,CAAC;AACH,CAAC;AAED,eAAeL,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}