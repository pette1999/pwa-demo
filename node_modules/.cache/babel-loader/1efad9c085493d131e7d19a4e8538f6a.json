{"ast":null,"code":"import parseClientData from \"utils/passkey/shared/parseClientData\";\n\nconst validatePassKeyCreation = credential => {\n  const clientDataValidation = validateClientData(credential);\n\n  switch (clientDataValidation.valid) {\n    case true:\n      return clientDataValidation.challenge;\n\n    case false:\n      return null;\n  }\n};\n\nconst validateClientData = credential => {\n  // @ts-ignore\n  // Gather the Client Data\n  const clientData = parseClientData(credential.response.clientDataJSON);\n  console.log(\"✅  Gathered Client Data: \", clientData);\n\n  if (clientData.origin !== process.env.REACT_APP_ORIGIN) {\n    console.log(\"❌  Origin does not match!\");\n    return {\n      valid: false,\n      challenge: null\n    };\n  } else if (clientData.type !== \"webauthn.create\") {\n    console.log(\"❌  Type does not match webauthn.create\");\n    return {\n      valid: false,\n      challenge: null\n    };\n  }\n\n  console.log(\"✅  Client Data is Valid\");\n  return {\n    valid: true,\n    challenge: clientData.challenge\n  };\n};\n\nexport default validatePassKeyCreation;","map":{"version":3,"names":["parseClientData","validatePassKeyCreation","credential","clientDataValidation","validateClientData","valid","challenge","clientData","response","clientDataJSON","console","log","origin","process","env","REACT_APP_ORIGIN","type"],"sources":["/Users/peterchen/Dropbox/Hexlink/react-passkey-proof-of-concept/src/utils/passkey/register/validatePassKeyCreation.tsx"],"sourcesContent":["import PassKeyClientData from \"types/passkey/passKeyClientData\";\nimport parseClientData from \"utils/passkey/shared/parseClientData\";\nimport PassKeyClientDataValidation from \"types/passkey/passKeyClientDataValidation\";\n\nconst validatePassKeyCreation = (credential: Credential): string | null => {\n  const clientDataValidation = validateClientData(credential);\n  switch (clientDataValidation.valid) {\n    case true:\n      return clientDataValidation.challenge;\n    case false:\n      return null;\n  }\n};\n\nconst validateClientData = (\n  credential: Credential\n): PassKeyClientDataValidation => {\n  // @ts-ignore\n  // Gather the Client Data\n  const clientData = parseClientData(credential.response.clientDataJSON);\n  console.log(\"✅  Gathered Client Data: \", clientData);\n  if (clientData.origin !== process.env.REACT_APP_ORIGIN) {\n    console.log(\"❌  Origin does not match!\");\n    return {\n      valid: false,\n      challenge: null,\n    };\n  } else if (clientData.type !== \"webauthn.create\") {\n    console.log(\"❌  Type does not match webauthn.create\");\n    return {\n      valid: false,\n      challenge: null,\n    };\n  }\n  console.log(\"✅  Client Data is Valid\");\n  return {\n    valid: true,\n    challenge: clientData.challenge,\n  };\n};\n\nexport default validatePassKeyCreation;\n"],"mappings":"AACA,OAAOA,eAAP,MAA4B,sCAA5B;;AAGA,MAAMC,uBAAuB,GAAIC,UAAD,IAA2C;EACzE,MAAMC,oBAAoB,GAAGC,kBAAkB,CAACF,UAAD,CAA/C;;EACA,QAAQC,oBAAoB,CAACE,KAA7B;IACE,KAAK,IAAL;MACE,OAAOF,oBAAoB,CAACG,SAA5B;;IACF,KAAK,KAAL;MACE,OAAO,IAAP;EAJJ;AAMD,CARD;;AAUA,MAAMF,kBAAkB,GACtBF,UADyB,IAEO;EAChC;EACA;EACA,MAAMK,UAAU,GAAGP,eAAe,CAACE,UAAU,CAACM,QAAX,CAAoBC,cAArB,CAAlC;EACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCJ,UAAzC;;EACA,IAAIA,UAAU,CAACK,MAAX,KAAsBC,OAAO,CAACC,GAAR,CAAYC,gBAAtC,EAAwD;IACtDL,OAAO,CAACC,GAAR,CAAY,2BAAZ;IACA,OAAO;MACLN,KAAK,EAAE,KADF;MAELC,SAAS,EAAE;IAFN,CAAP;EAID,CAND,MAMO,IAAIC,UAAU,CAACS,IAAX,KAAoB,iBAAxB,EAA2C;IAChDN,OAAO,CAACC,GAAR,CAAY,wCAAZ;IACA,OAAO;MACLN,KAAK,EAAE,KADF;MAELC,SAAS,EAAE;IAFN,CAAP;EAID;;EACDI,OAAO,CAACC,GAAR,CAAY,yBAAZ;EACA,OAAO;IACLN,KAAK,EAAE,IADF;IAELC,SAAS,EAAEC,UAAU,CAACD;EAFjB,CAAP;AAID,CAzBD;;AA2BA,eAAeL,uBAAf"},"metadata":{},"sourceType":"module"}