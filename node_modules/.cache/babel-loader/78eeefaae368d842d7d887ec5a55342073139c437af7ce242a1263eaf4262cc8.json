{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n  constructor(time) {\n    if (time) {\n      if (typeof time === \"string\" || typeof time === \"number\" || time instanceof Date) {\n        const date = new Date(time);\n        if (date.getUTCFullYear() > 2049) {\n          this.generalTime = date;\n        } else {\n          this.utcTime = date;\n        }\n      } else {\n        Object.assign(this, time);\n      }\n    }\n  }\n  getTime() {\n    const time = this.utcTime || this.generalTime;\n    if (!time) {\n      throw new Error(\"Cannot get time from CHOICE object\");\n    }\n    return time;\n  }\n};\n__decorate([AsnProp({\n  type: AsnPropTypes.UTCTime\n})], Time.prototype, \"utcTime\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.GeneralizedTime\n})], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([AsnType({\n  type: AsnTypeTypes.Choice\n})], Time);\nexport { Time };","map":{"version":3,"names":["__decorate","AsnProp","AsnPropTypes","AsnType","AsnTypeTypes","Time","constructor","time","Date","date","getUTCFullYear","generalTime","utcTime","Object","assign","getTime","Error","type","UTCTime","prototype","GeneralizedTime","Choice"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/node_modules/@peculiar/asn1-x509/build/es2015/time.js"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n    constructor(time) {\n        if (time) {\n            if (typeof time === \"string\" || typeof time === \"number\" || time instanceof Date) {\n                const date = new Date(time);\n                if (date.getUTCFullYear() > 2049) {\n                    this.generalTime = date;\n                }\n                else {\n                    this.utcTime = date;\n                }\n            }\n            else {\n                Object.assign(this, time);\n            }\n        }\n    }\n    getTime() {\n        const time = this.utcTime || this.generalTime;\n        if (!time) {\n            throw new Error(\"Cannot get time from CHOICE object\");\n        }\n        return time;\n    }\n};\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.UTCTime,\n    })\n], Time.prototype, \"utcTime\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.GeneralizedTime,\n    })\n], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Time);\nexport { Time };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,EAAEC,YAAY,EAAEC,OAAO,EAAEC,YAAY,QAAQ,uBAAuB;AACpF,IAAIC,IAAI,GAAG,MAAMA,IAAI,CAAC;EAClBC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAIA,IAAI,EAAE;MACN,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,YAAYC,IAAI,EAAE;QAC9E,MAAMC,IAAI,GAAG,IAAID,IAAI,CAACD,IAAI,CAAC;QAC3B,IAAIE,IAAI,CAACC,cAAc,CAAC,CAAC,GAAG,IAAI,EAAE;UAC9B,IAAI,CAACC,WAAW,GAAGF,IAAI;QAC3B,CAAC,MACI;UACD,IAAI,CAACG,OAAO,GAAGH,IAAI;QACvB;MACJ,CAAC,MACI;QACDI,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEP,IAAI,CAAC;MAC7B;IACJ;EACJ;EACAQ,OAAOA,CAAA,EAAG;IACN,MAAMR,IAAI,GAAG,IAAI,CAACK,OAAO,IAAI,IAAI,CAACD,WAAW;IAC7C,IAAI,CAACJ,IAAI,EAAE;MACP,MAAM,IAAIS,KAAK,CAAC,oCAAoC,CAAC;IACzD;IACA,OAAOT,IAAI;EACf;AACJ,CAAC;AACDP,UAAU,CAAC,CACPC,OAAO,CAAC;EACJgB,IAAI,EAAEf,YAAY,CAACgB;AACvB,CAAC,CAAC,CACL,EAAEb,IAAI,CAACc,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACrCnB,UAAU,CAAC,CACPC,OAAO,CAAC;EACJgB,IAAI,EAAEf,YAAY,CAACkB;AACvB,CAAC,CAAC,CACL,EAAEf,IAAI,CAACc,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACzCd,IAAI,GAAGL,UAAU,CAAC,CACdG,OAAO,CAAC;EAAEc,IAAI,EAAEb,YAAY,CAACiB;AAAO,CAAC,CAAC,CACzC,EAAEhB,IAAI,CAAC;AACR,SAASA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}