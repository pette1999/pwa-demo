{"ast":null,"code":"var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n  constructor(params = {}) {\n    this.base = new GeneralName();\n    this.minimum = 0;\n    Object.assign(this, params);\n  }\n}\n__decorate([AsnProp({\n  type: GeneralName\n})], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.Integer,\n  context: 0,\n  defaultValue: 0,\n  implicit: true\n})], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([AsnProp({\n  type: AsnPropTypes.Integer,\n  context: 1,\n  optional: true,\n  implicit: true\n})], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n  constructor(items) {\n    super(items);\n    Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n  }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([AsnType({\n  type: AsnTypeTypes.Sequence,\n  itemType: GeneralSubtree\n})], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n  constructor(params = {}) {\n    Object.assign(this, params);\n  }\n}\n__decorate([AsnProp({\n  type: GeneralSubtrees,\n  context: 0,\n  optional: true,\n  implicit: true\n})], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([AsnProp({\n  type: GeneralSubtrees,\n  context: 1,\n  optional: true,\n  implicit: true\n})], NameConstraints.prototype, \"excludedSubtrees\", void 0);","map":{"version":3,"names":["GeneralSubtrees_1","__decorate","AsnProp","AsnPropTypes","AsnArray","AsnType","AsnTypeTypes","GeneralName","id_ce","id_ce_nameConstraints","GeneralSubtree","constructor","params","base","minimum","Object","assign","type","prototype","Integer","context","defaultValue","implicit","optional","GeneralSubtrees","items","setPrototypeOf","Sequence","itemType","NameConstraints"],"sources":["/Users/peterchen/Dropbox/Hexlink/Projects/pwa-demo/node_modules/@peculiar/asn1-x509/build/es2015/extensions/name_constraints.js"],"sourcesContent":["var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n    constructor(params = {}) {\n        this.base = new GeneralName();\n        this.minimum = 0;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 0, defaultValue: 0, implicit: true })\n], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 1, optional: true, implicit: true })\n], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n    }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralSubtree })\n], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 0, optional: true, implicit: true })\n], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 1, optional: true, implicit: true })\n], NameConstraints.prototype, \"excludedSubtrees\", void 0);\n"],"mappings":"AAAA,IAAIA,iBAAiB;AACrB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,YAAY,QAAQ,uBAAuB;AAC9F,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,OAAO,MAAMC,qBAAqB,GAAI,GAAED,KAAM,KAAI;AAClD,OAAO,MAAME,cAAc,CAAC;EACxBC,WAAWA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IACrB,IAAI,CAACC,IAAI,GAAG,IAAIN,WAAW,CAAC,CAAC;IAC7B,IAAI,CAACO,OAAO,GAAG,CAAC;IAChBC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEJ,MAAM,CAAC;EAC/B;AACJ;AACAX,UAAU,CAAC,CACPC,OAAO,CAAC;EAAEe,IAAI,EAAEV;AAAY,CAAC,CAAC,CACjC,EAAEG,cAAc,CAACQ,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC5CjB,UAAU,CAAC,CACPC,OAAO,CAAC;EAAEe,IAAI,EAAEd,YAAY,CAACgB,OAAO;EAAEC,OAAO,EAAE,CAAC;EAAEC,YAAY,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CACvF,EAAEZ,cAAc,CAACQ,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC/CjB,UAAU,CAAC,CACPC,OAAO,CAAC;EAAEe,IAAI,EAAEd,YAAY,CAACgB,OAAO;EAAEC,OAAO,EAAE,CAAC;EAAEG,QAAQ,EAAE,IAAI;EAAED,QAAQ,EAAE;AAAK,CAAC,CAAC,CACtF,EAAEZ,cAAc,CAACQ,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC/C,IAAIM,eAAe,GAAGxB,iBAAiB,GAAG,MAAMwB,eAAe,SAASpB,QAAQ,CAAC;EAC7EO,WAAWA,CAACc,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZV,MAAM,CAACW,cAAc,CAAC,IAAI,EAAE1B,iBAAiB,CAACkB,SAAS,CAAC;EAC5D;AACJ,CAAC;AACDM,eAAe,GAAGxB,iBAAiB,GAAGC,UAAU,CAAC,CAC7CI,OAAO,CAAC;EAAEY,IAAI,EAAEX,YAAY,CAACqB,QAAQ;EAAEC,QAAQ,EAAElB;AAAe,CAAC,CAAC,CACrE,EAAEc,eAAe,CAAC;AACnB,SAASA,eAAe;AACxB,OAAO,MAAMK,eAAe,CAAC;EACzBlB,WAAWA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IACrBG,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEJ,MAAM,CAAC;EAC/B;AACJ;AACAX,UAAU,CAAC,CACPC,OAAO,CAAC;EAAEe,IAAI,EAAEO,eAAe;EAAEJ,OAAO,EAAE,CAAC;EAAEG,QAAQ,EAAE,IAAI;EAAED,QAAQ,EAAE;AAAK,CAAC,CAAC,CACjF,EAAEO,eAAe,CAACX,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;AAC1DjB,UAAU,CAAC,CACPC,OAAO,CAAC;EAAEe,IAAI,EAAEO,eAAe;EAAEJ,OAAO,EAAE,CAAC;EAAEG,QAAQ,EAAE,IAAI;EAAED,QAAQ,EAAE;AAAK,CAAC,CAAC,CACjF,EAAEO,eAAe,CAACX,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}