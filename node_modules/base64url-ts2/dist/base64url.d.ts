/// <reference types="node" />
export declare type Encoding = "ascii" | "utf8" | "utf16le" | "ucs2" | "base64" | "binary" | "hex";
export declare type EncodedString = string | Buffer;
export interface Base64Url {
    (input: EncodedString, encoding?: Encoding): string;
    encode(input: EncodedString, encoding?: Encoding): string;
    decode(base64url: EncodedString, encoding?: Encoding): string;
    toBase64(base64url: EncodedString): string;
    fromBase64(base64: EncodedString): string;
    toBuffer(base64url: EncodedString): Buffer;
}
declare let base64url: Base64Url;
export default base64url;
